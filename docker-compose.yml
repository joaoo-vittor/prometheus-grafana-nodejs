version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'npm run dev'
    restart: always
    container_name: application
    ports:
      - 5000:5000
    environment:
      - PORT=5000
    volumes:
      - .:/app
    networks:
      - metrics

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker/prometheus/config:/etc/prometheus
      - ./docker/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - metrics
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana:/var/lib/grafana
    networks:
      - metrics

  # db:
  #   image: mysql:5.7.22
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: product
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: root
  #     MYSQL_ROOT_PASSWORD: root
  #   volumes:
  #     - docker/dbdata:/var/lib/mysql
  #   ports:
  #     - 33066:3306


networks:
  metrics:
    driver: bridge